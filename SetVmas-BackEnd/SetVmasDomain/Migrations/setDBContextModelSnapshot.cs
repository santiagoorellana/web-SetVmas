// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SetVmasDomain.Models;

namespace SetVmasDomain.Migrations
{
    [DbContext(typeof(setDBContext))]
    partial class setDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SetVmasDomain.Models.AlmacenImagen", b =>
                {
                    b.Property<int>("AlmacenImagenId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnuncioId");

                    b.Property<string>("ImageContent");

                    b.Property<string>("ImageMimeType");

                    b.Property<string>("ImageName");

                    b.Property<string>("Imagen");

                    b.Property<bool?>("IsFree");

                    b.HasKey("AlmacenImagenId");

                    b.HasIndex("AnuncioId");

                    b.ToTable("AlmacenImagen");
                });

            modelBuilder.Entity("SetVmasDomain.Models.AnuncioBonificado", b =>
                {
                    b.Property<int>("AnuncioBonificadoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnuncioId");

                    b.Property<decimal>("CantidadBonificada");

                    b.Property<DateTime>("FechaBoni");

                    b.Property<int>("UsuarioId");

                    b.HasKey("AnuncioBonificadoId");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AnuncioBonificados");
                });

            modelBuilder.Entity("SetVmasDomain.Models.AnuncioEtiquetas", b =>
                {
                    b.Property<int>("AnuncioEtiquetaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnuncioId");

                    b.Property<int>("EtiquetaId");

                    b.Property<bool?>("IsFree");

                    b.HasKey("AnuncioEtiquetaId");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("EtiquetaId");

                    b.ToTable("AnuncioEtiquetas");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Anuncios", b =>
                {
                    b.Property<int>("AnuncioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion");

                    b.Property<int>("ContadorView");

                    b.Property<string>("CorreoContacto");

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("ImageContent");

                    b.Property<string>("ImageMimeType");

                    b.Property<string>("ImageName");

                    b.Property<bool>("IsActivo");

                    b.Property<bool>("IsVisible");

                    b.Property<string>("Municipio");

                    b.Property<string>("NombreContacto");

                    b.Property<decimal>("Precio");

                    b.Property<bool>("ProductoNuevo");

                    b.Property<string>("Provincia");

                    b.Property<string>("TelefonoContacto");

                    b.Property<string>("Titulo");

                    b.Property<string>("Url");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("AnuncioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Banners", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnuncioId");

                    b.Property<int>("CantidadDias");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaDesactivacion");

                    b.Property<DateTime?>("FechaUltView");

                    b.Property<string>("ImageContent");

                    b.Property<string>("ImageMimeType");

                    b.Property<string>("ImageName");

                    b.Property<bool>("IsActivo");

                    b.Property<string>("Nombre");

                    b.Property<string>("Tipo");

                    b.Property<string>("Url");

                    b.HasKey("BannerId");

                    b.HasIndex("AnuncioId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantAutoRenovables");

                    b.Property<string>("ImageContent");

                    b.Property<string>("ImageMimeType");

                    b.Property<string>("ImageName");

                    b.Property<string>("Imagen");

                    b.Property<string>("Nombre");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("SetVmasDomain.Models.CategoriaEtiqueta", b =>
                {
                    b.Property<int>("CategoriaEtiquetaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId");

                    b.Property<int>("EtiquetaId");

                    b.HasKey("CategoriaEtiquetaId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EtiquetaId");

                    b.ToTable("CategoriaEtiqueta");
                });

            modelBuilder.Entity("SetVmasDomain.Models.ClasesUsuarios", b =>
                {
                    b.Property<int>("ClasesUsuariosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BonificacionPorAlcanzarla");

                    b.Property<double>("BonificacionPorAnuncioDiario");

                    b.Property<double>("FactorBonificacionCompra");

                    b.Property<string>("Nombre");

                    b.Property<int>("RequisitoAntigueda");

                    b.Property<int>("RequisitoCantidadReferidos");

                    b.Property<int>("RequisitoCompras");

                    b.Property<decimal?>("RequisitoPuntos")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("ClasesUsuariosId");

                    b.ToTable("ClasesUsuarios");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Denuncias", b =>
                {
                    b.Property<int>("DenunciaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuncioId");

                    b.Property<int?>("BannerId");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<int?>("MotivoDenunciaId");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("DenunciaId");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("BannerId");

                    b.HasIndex("MotivoDenunciaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Denuncias");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Etiqueta", b =>
                {
                    b.Property<int>("EtiquetaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantUsada");

                    b.Property<string>("Nombre");

                    b.HasKey("EtiquetaId");

                    b.ToTable("Etiqueta");
                });

            modelBuilder.Entity("SetVmasDomain.Models.FactoresBonificacionVentas", b =>
                {
                    b.Property<int>("FactoresBonificacionVentasId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ClaseBronce");

                    b.Property<double>("ClaseDiamante");

                    b.Property<double>("ClaseIniciada");

                    b.Property<double>("ClaseOro");

                    b.Property<double>("ClasePlata");

                    b.Property<int>("Nivel");

                    b.HasKey("FactoresBonificacionVentasId");

                    b.ToTable("FactoresBonificacionVentas");
                });

            modelBuilder.Entity("SetVmasDomain.Models.MotivoDenuncia", b =>
                {
                    b.Property<int>("MotivoDenunciaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<string>("Nombre");

                    b.Property<string>("NombreCodigo");

                    b.HasKey("MotivoDenunciaId");

                    b.ToTable("MotivoDenuncia");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Notificacion", b =>
                {
                    b.Property<int>("NotificacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnuncioId");

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnName("FechaCReacion");

                    b.Property<string>("Motivo");

                    b.Property<string>("Texto");

                    b.Property<int?>("UsuarioCreaUsuarioId");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("NotificacionId");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("UsuarioCreaUsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Notificacion");
                });

            modelBuilder.Entity("SetVmasDomain.Models.OpcionAvanzadas", b =>
                {
                    b.Property<int>("OpcionAvanzadaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnuncioId");

                    b.Property<int>("CantidadDias");

                    b.Property<DateTime?>("FechaDesactivacion");

                    b.Property<bool>("IsActivo");

                    b.Property<int?>("TipoOpcionId");

                    b.HasKey("OpcionAvanzadaId");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("TipoOpcionId");

                    b.ToTable("OpcionAvanzadas");
                });

            modelBuilder.Entity("SetVmasDomain.Models.PaginasEstaticas", b =>
                {
                    b.Property<int>("PaginasEstaticasId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contenido");

                    b.Property<string>("Titulo");

                    b.HasKey("PaginasEstaticasId");

                    b.ToTable("PaginasEstaticas");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Pagos", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantCup");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Fuente")
                        .HasMaxLength(50);

                    b.Property<decimal>("Puntos")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("Tipo");

                    b.Property<int>("TransferenciaId");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("PagoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("SetVmasDomain.Models.TipoOpciones", b =>
                {
                    b.Property<int>("TipoOpcionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadFrecuencia");

                    b.Property<int>("MinimoComprar");

                    b.Property<string>("Nombre");

                    b.Property<string>("NombreCodigo");

                    b.Property<double>("Precio");

                    b.Property<string>("TextoLabel");

                    b.HasKey("TipoOpcionId");

                    b.ToTable("TipoOpciones");
                });

            modelBuilder.Entity("SetVmasDomain.Models.TipoTransferencia", b =>
                {
                    b.Property<int>("TipoTransferenciaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.Property<string>("NombreCodigo");

                    b.HasKey("TipoTransferenciaId");

                    b.ToTable("TipoTransferencia");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Transferencia", b =>
                {
                    b.Property<int>("TransferenciaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha");

                    b.Property<decimal>("Puntos")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int?>("TipoTransferenciaId");

                    b.Property<int?>("UsuarioDestinoUsuarioId");

                    b.Property<int?>("UsuarioFuenteUsuarioId");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("TransferenciaId");

                    b.HasIndex("TipoTransferenciaId");

                    b.HasIndex("UsuarioDestinoUsuarioId");

                    b.HasIndex("UsuarioFuenteUsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transferencia");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Anfitrion");

                    b.Property<bool>("Bloqueado");

                    b.Property<int>("CantReferidos");

                    b.Property<int?>("ClasesUsuariosId");

                    b.Property<string>("Codigo");

                    b.Property<string>("Correo");

                    b.Property<string>("Direccion");

                    b.Property<string>("Edad");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaDesbloqueo");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaUltimaEntrada");

                    b.Property<DateTime?>("FechaUltimaView");

                    b.Property<DateTime?>("FechaUltimoAnuncio");

                    b.Property<string>("Municipio");

                    b.Property<string>("Password");

                    b.Property<string>("Provincia");

                    b.Property<decimal>("Puntos")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("Rol");

                    b.Property<string>("Telefono");

                    b.Property<string>("Url");

                    b.Property<bool?>("Visible");

                    b.HasKey("UsuarioId");

                    b.HasIndex("ClasesUsuariosId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("SetVmasDomain.Models.VariableConfiguracion", b =>
                {
                    b.Property<int>("VariableConfiguracionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<string>("NombreCodigo");

                    b.Property<string>("Tipo");

                    b.Property<string>("Valor");

                    b.HasKey("VariableConfiguracionId");

                    b.ToTable("VariableConfiguracion");
                });

            modelBuilder.Entity("SetVmasDomain.Models.AlmacenImagen", b =>
                {
                    b.HasOne("SetVmasDomain.Models.Anuncios", "Anuncio")
                        .WithMany("AlmacenImagen")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SetVmasDomain.Models.AnuncioBonificado", b =>
                {
                    b.HasOne("SetVmasDomain.Models.Anuncios", "Anuncio")
                        .WithMany()
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SetVmasDomain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SetVmasDomain.Models.AnuncioEtiquetas", b =>
                {
                    b.HasOne("SetVmasDomain.Models.Anuncios", "Anuncio")
                        .WithMany("AnuncioEtiquetas")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SetVmasDomain.Models.Etiqueta", "Etiqueta")
                        .WithMany("AnuncioEtiquetas")
                        .HasForeignKey("EtiquetaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SetVmasDomain.Models.Anuncios", b =>
                {
                    b.HasOne("SetVmasDomain.Models.Usuario", "Usuario")
                        .WithMany("Anuncios")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Banners", b =>
                {
                    b.HasOne("SetVmasDomain.Models.Anuncios", "Anuncio")
                        .WithMany("Banners")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SetVmasDomain.Models.CategoriaEtiqueta", b =>
                {
                    b.HasOne("SetVmasDomain.Models.Categoria", "Categoria")
                        .WithMany("CategoriaEtiqueta")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SetVmasDomain.Models.Etiqueta", "Etiqueta")
                        .WithMany("CategoriaEtiqueta")
                        .HasForeignKey("EtiquetaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SetVmasDomain.Models.Denuncias", b =>
                {
                    b.HasOne("SetVmasDomain.Models.Anuncios", "Anuncio")
                        .WithMany("Denuncias")
                        .HasForeignKey("AnuncioId");

                    b.HasOne("SetVmasDomain.Models.Banners", "Banner")
                        .WithMany("Denuncias")
                        .HasForeignKey("BannerId");

                    b.HasOne("SetVmasDomain.Models.MotivoDenuncia", "MotivoDenuncia")
                        .WithMany("Denuncias")
                        .HasForeignKey("MotivoDenunciaId");

                    b.HasOne("SetVmasDomain.Models.Usuario", "Usuario")
                        .WithMany("Denuncias")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Notificacion", b =>
                {
                    b.HasOne("SetVmasDomain.Models.Anuncios", "Anuncio")
                        .WithMany("Notificacion")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SetVmasDomain.Models.Usuario", "UsuarioCreaUsuario")
                        .WithMany("NotificacionUsuarioCreaUsuario")
                        .HasForeignKey("UsuarioCreaUsuarioId");

                    b.HasOne("SetVmasDomain.Models.Usuario", "Usuario")
                        .WithMany("NotificacionUsuario")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("SetVmasDomain.Models.OpcionAvanzadas", b =>
                {
                    b.HasOne("SetVmasDomain.Models.Anuncios", "Anuncio")
                        .WithMany("OpcionAvanzadas")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SetVmasDomain.Models.TipoOpciones", "TipoOpcion")
                        .WithMany("OpcionAvanzadas")
                        .HasForeignKey("TipoOpcionId");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Pagos", b =>
                {
                    b.HasOne("SetVmasDomain.Models.Usuario", "Usuario")
                        .WithMany("Pagos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Transferencia", b =>
                {
                    b.HasOne("SetVmasDomain.Models.TipoTransferencia", "TipoTransferencia")
                        .WithMany("Transferencia")
                        .HasForeignKey("TipoTransferenciaId");

                    b.HasOne("SetVmasDomain.Models.Usuario", "UsuarioDestinoUsuario")
                        .WithMany("TransferenciaUsuarioDestinoUsuario")
                        .HasForeignKey("UsuarioDestinoUsuarioId");

                    b.HasOne("SetVmasDomain.Models.Usuario", "UsuarioFuenteUsuario")
                        .WithMany("TransferenciaUsuarioFuenteUsuario")
                        .HasForeignKey("UsuarioFuenteUsuarioId");

                    b.HasOne("SetVmasDomain.Models.Usuario", "Usuario")
                        .WithMany("TransferenciaUsuario")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("SetVmasDomain.Models.Usuario", b =>
                {
                    b.HasOne("SetVmasDomain.Models.ClasesUsuarios", "ClasesUsuarios")
                        .WithMany("Usuario")
                        .HasForeignKey("ClasesUsuariosId");
                });
#pragma warning restore 612, 618
        }
    }
}
